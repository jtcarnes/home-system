# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
# Indicates whether to pull the machine config upon every boot.
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: ${machine.token}
    # The root certificate authority of the PKI.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJjcEVZTlJydlFWQ1BFS2VGZkk1WEtNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU1qQTFNRGt4TlRVeU1UZGFGdzB6TWpBMU1EWXhOVFV5TVRkYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBMlJuelZZQzEydXVSUXhXM3Q2djhIdWdWTU95VTk2bDNSTWxFClZPSVdYNk9qWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVT1hHWHdDL3ZGRk9GT0laSgpvNWdjNnlKSzFsb3dCUVlESzJWd0EwRUE4UnhmVWsvby9ob2lJRFpKTzJvUFFjaTg2R2REK1dHeEs0U2FkcGFTCndqYnZIVWtnZTlqbUhjQzFTc05XR0owd3RyMFRYc0FsUUQ0UUNGUURzQ2NyQnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJS1BUYWkwUjU3cFRIOEErYTNJb2xHbktMaDBTWlhIVUU0RVJ2d3ZIWjZtbgotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.23.6
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        extraArgs:
            rotate-server-certificates: true
            # node-labels: openebs.io/engine=mayastor
            # # The `extraMounts` field is used to add additional mounts to the kubelet container.
            # extraMounts:
            #     - destination: /var/lib/example
            #       type: bind
            #       source: /var/lib/example
            #       options:
            #         - bind
            #         - rshared
            #         - rw
            # # The `extraConfig` field is used to provide kubelet configuration overrides.
            # extraConfig:
            #     serverTLSBootstrap: true
            # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
            # nodeIP:
            #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
            #     validSubnets:
            #         - 10.0.0.0/8
            #         - '!10.0.0.3/32'
            #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        # Configures KubeSpan feature.
        kubespan:
            # Enable the KubeSpan feature.
            enabled: true
        # # `interfaces` is used to define the network interface configuration.
        # interfaces:
        #     - interface: eth0 # The interface name.
        #       # Assigns static IP addresses to the interface.
        #       addresses:
        #         - 192.168.2.0/24
        #       # A list of routes associated with the interface.
        #       routes:
        #         - network: 0.0.0.0/0 # The route's network (destination).
        #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
        #           metric: 1024 # The optional metric for the route.
        #       mtu: 1500 # The interface's MTU.
        #
        #       # # Bond specific options.
        #       # bond:
        #       #     # The interfaces that make up the bond.
        #       #     interfaces:
        #       #         - eth0
        #       #         - eth1
        #       #     mode: 802.3ad # A bond option.
        #       #     lacpRate: fast # A bond option.
        #       # # Indicates if DHCP should be used to configure the interface.
        #       # dhcp: true
        #       # # DHCP specific options.
        #       # dhcpOptions:
        #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
        #       # # Wireguard specific configuration.
        #       # # wireguard server example
        #       # wireguard:
        #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
        #       #     listenPort: 51111 # Specifies a device's listening port.
        #       #     # Specifies a list of peer configurations to apply to a device.
        #       #     peers:
        #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
        #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
        #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
        #       #           allowedIPs:
        #       #             - 192.168.1.0/24
        #       # # wireguard peer example
        #       # wireguard:
        #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
        #       #     # Specifies a list of peer configurations to apply to a device.
        #       #     peers:
        #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
        #       #           endpoint: 192.168.1.2 # Specifies the endpoint of this peer entry.
        #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
        #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
        #       #           allowedIPs:
        #       #             - 192.168.1.0/24
        #       # # Virtual (shared) IP address configuration.
        vip:
            # Specifies the IP address to be used.
            ip: 172.16.199.55
            # # Used to statically set the nameservers for the machine.
            # nameservers:
            #     - 8.8.8.8
            #     - 1.1.1.1
            # # Allows for extra entries to be added to the `/etc/hosts` file
            # extraHostEntries:
            #     - ip: 192.168.1.100 # The IP of the host.
            #       # The host alias.
            #       aliases:
            #         - example
            #         - example.domain.tld
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/sda
        # Allows for supplying the image used to perform the installation.
        image: ghcr.io/talos-systems/installer:v1.0.4
        # Indicates if a bootloader should be installed.
        bootloader: true
        # Indicates if the installation disk should be wiped at installation time.
        wipe: false
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
        # # Allows for supplying additional system extension images to install on top of base Talos image.
        extensions: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
    # # Provides machine specific control plane configuration options.
    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.
    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx
    # # Used to partition, format and mount additional disks.
    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824
    # # Allows the addition of user specified files.
    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use
    # # The `env` field allows for the addition of environment variables.
    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
    # # Used to configure the machine's time settings.
    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # Specifies time (NTP) servers to use for setting the system time.
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
    # # Used to configure the machine's sysctls.
    # # MachineSysctls usage example.
    sysctls:
        user:
            max_user_namespaces: "11255"
        vm:
            nr_hugepages: "1024"
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    # # Used to configure the machine's sysfs.
    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
    # # Used to configure the machine's container image registry mirrors.
    # registries:
    #     # Specifies mirror configuration for each registry.
    #     mirrors:
    #         ghcr.io:
    #             # List of endpoints (URLs) for registry mirrors to use.
    #             endpoints:
    #                 - https://registry.insecure
    #                 - https://ghcr.io/v2/
    #     # Specifies TLS & auth configuration for HTTPS image registries.
    #     config:
    #         registry.insecure:
    #             # The TLS configuration for the registry.
    #             tls:
    #                 insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #
    #                 # # Enable mutual TLS authentication with the registry.
    #                 # clientIdentity:
    #                 #     crt: TFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVSklla05DTUhGLi4u
    #                 #     key: TFMwdExTMUNSVWRKVGlCRlJESTFOVEU1SUZCU1NWWkJWRVVnUzBWWkxTMHRMUzBLVFVNLi4u
    #
    #             # # The auth configuration for this registry.
    #             # auth:
    #             #     username: username # Optional registry authentication.
    #             #     password: password # Optional registry authentication.
    # # Machine system disk encryption configuration.
    systemDiskEncryption:
        # Ephemeral partition encryption.
        ephemeral:
            # Encryption provider to use for the encryption.
            provider: luks2
            # Defines the encryption keys generation and storage method.
            keys:
                # Deterministically generated key from the node UUID and PartitionLabel.
                - nodeID: {}
                  # Key slot number for LUKS2 encryption.
                  slot: 0
        state:
            keys:
                - nodeID: {}
                  slot: 0
#         # # Defines the encryption sector size.
#         # blockSize: 4096
#         # # Additional --perf parameters for the LUKS2 encryption.
#         # options:
#         #     - no_read_workqueue
#         #     - no_write_workqueue
# # Configures the udev system.
# udev:
#     # List of udev rules to apply to the udev system
#     rules:
#         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
# # Configures the logging system.
# logging:
#     # Logging destination.
#     destinations:
#         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
#           format: json_lines # Logs format.
# # Configures the kernel.
# kernel:
#     # Kernel modules to load.
#     modules:
#         - name: brtfs # Module name.
# Provides cluster specific configuration options.
cluster:
    #
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: TF8tz_xppmXW1Wa0zyEwAIIBxkdGeISig-FLcf6PsV0=
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ${cluster.secret}
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://10.0.1.50:6443
    # Configures the cluster's name.
    clusterName: cluster-home
    # Provides cluster specific network configuration options.
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
        # # The CNI used.
        cni:
            # Name of CNI to use.
            name: none
            #     # URLs containing manifests to apply for the CNI.
            #     urls:
            #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: ${cluster.token}
    # The key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    aescbcEncryptionSecret: ${cluster.aescbcEncryptionSecret}
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVMrZ0F3SUJBZ0lRZlRnNUFvc3lQK2lnb0pVd0NWRXgwREFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSXlNRFV3T1RFMU5USXhOMW9YRFRNeU1EVXdOakUxTlRJeApOMW93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCRmhESldHUFNlSnJwamtidXpTeXpsV3BUV0NFQ0lTWnZVKy9pOWpMdWl6UDBMSE1Ba1FKUFB3QWgrcWoKZVhOOS9XRUpDSEtmMis4bGZySzBMRHR6NXRLallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVVOaEFOZEpvRU8vYUJHZnRJYjNSWGMyT0NnYll3Q2dZSUtvWkl6ajBFQXdJRFNRQXdSZ0loQU55TktVNEIKbkJpblp4RjB4dUx3RmxQbVA4cUdvNzk0aFFJUDhIMzh4c094QWlFQTJFV0ZSZ295aWR2aVcxNEhJYXI2WkIvOQpmV1U0dDMyWVJnYldjbU1teTVvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: ${cluster.ca.key}
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZVENDQVFhZ0F3SUJBZ0lSQU8rY2c3ZHdhQXhwU3RubWF4cHdGeFl3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU1qQTFNRGt4TlRVeU1UZGFGdzB6TWpBMU1EWXhOVFV5TVRkYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVN5NmRvZC9MUGFaMkYxVnNTVlpOeHpWalovY0VvY1FKY1VJWUp1LzJwbXRRd2hSbkloCjB2V2MzUElYK3cyeDV0eHpmOHBudGdKTUo2S2F6MlJvZGVaR28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGSUZOd05aQ1kzb2lvd3QrR1VQUGR6RUttcnhmTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDCklRREZwdTBranJvWVRZZ2h3dGRIN2M4VURzQWtFVDVMYVV2a2VveEJzeGJ5blFJaEFLTEFCZ3Q1cDlNK3JHV0wKeVlVOGJNL2IzbWYxai9BYkppSVFaUjdtV1oxWAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: ${cluster.aggregatorCA.key}
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: ${cluster.serviceAccount.key}
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: k8s.gcr.io/kube-apiserver:v1.23.6
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 10.0.1.50
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # # Configure the API server admission plugins.
        admissionControl:
            # Name is the name of the admission controller.
            - name: PodSecurity
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                  apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                  defaults:
                      audit: restricted
                      audit-version: latest
                      enforce: baseline
                      enforce-version: latest
                      warn: restricted
                      warn-version: latest
                  exemptions:
                      namespaces:
                          - kube-system
                      runtimeClasses: []
                      usernames: []
                  kind: PodSecurityConfiguration
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: k8s.gcr.io/kube-controller-manager:v1.23.6
    # Kube-proxy server-specific configuration options
    proxy:
        disabled: true
        # The container image used in the kube-proxy manifest.
        image: k8s.gcr.io/kube-proxy:v1.23.6
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: k8s.gcr.io/kube-scheduler:v1.23.6
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes: {}
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQU1YTWNocWVyZytVY0xXenp5UVAwQmt3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TWpBMU1Ea3hOVFV5TVRkYUZ3MHpNakExTURZeE5UVXlNVGRhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFUTkNyQ3h3WkJLClV4RG5QeDVUUkZiT2VZenBsQThoTVJCSFJHSVF1K2ZaS1hFSmVmL3h5TlFyZG9jaVdyT0JOcW5PSFRsY2JqK0IKaFFVUThvWno5V2VObzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRlAxS0JZTUNkRFpvCjJSMnUrTnhGb3BaQVRhOVdNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJQm14ZEdFSFU4K1RPNlJVUU5YV0s3a2kKMjNrSUlaUEhwdTR0UkpEYTlHRjRBaUVBdDR0NmxiYmh6WXNUQ0YzdGhNUnNFVVRoUk1BQmYrZ1pvTlJjMWFvVgpiYkU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
            key: ${cluster.etcd.ca.key}
            # # The container image used to create the etcd service.
            # image: gcr.io/etcd-development/etcd:v3.5.3
            # # The subnet from which the advertise URL should be.
            # subnet: 10.0.0.0/8
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
# # Core DNS specific configuration options.
# coreDNS:
#     image: docker.io/coredns/coredns:1.9.1 # The `image` field is an override to the default coredns image.
# # External cloud provider configuration.
# externalCloudProvider:
#     enabled: true # Enable external cloud provider.
#     # A list of urls that point to additional manifests for an external cloud provider.
#     manifests:
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
# # A map of key value pairs that will be added while fetching the extraManifests.
# extraManifestHeaders:
#     Token: "1234567"
#     X-ExtraInfo: info
# # Settings for admin kubeconfig generation.
# adminKubeconfig:
#     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
