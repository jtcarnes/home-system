Name:         runnerdeployments.actions.summerwind.dev
Namespace:    
Labels:       <none>
Annotations:  controller-gen.kubebuilder.io/version: v0.6.0
API Version:  apiextensions.k8s.io/v1
Kind:         CustomResourceDefinition
Metadata:
  Creation Timestamp:  2021-08-14T18:27:59Z
  Generation:          1
  Managed Fields:
    API Version:  apiextensions.k8s.io/v1
    Fields Type:  FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .:
          f:controller-gen.kubebuilder.io/version:
      f:spec:
        f:conversion:
          .:
          f:strategy:
        f:group:
        f:names:
          f:kind:
          f:listKind:
          f:plural:
          f:singular:
        f:scope:
        f:versions:
    Manager:      helm-controller
    Operation:    Update
    Time:         2021-08-14T18:27:59Z
    API Version:  apiextensions.k8s.io/v1
    Fields Type:  FieldsV1
    fieldsV1:
      f:status:
        f:acceptedNames:
          f:kind:
          f:listKind:
          f:plural:
          f:singular:
        f:conditions:
          k:{"type":"Established"}:
            .:
            f:lastTransitionTime:
            f:message:
            f:reason:
            f:status:
            f:type:
          k:{"type":"NamesAccepted"}:
            .:
            f:lastTransitionTime:
            f:message:
            f:reason:
            f:status:
            f:type:
    Manager:         kube-apiserver
    Operation:       Update
    Time:            2021-08-14T18:27:59Z
  Resource Version:  6889
  UID:               01231c0e-a78e-429d-b869-4adf68ff333a
Spec:
  Conversion:
    Strategy:  None
  Group:       actions.summerwind.dev
  Names:
    Kind:       RunnerDeployment
    List Kind:  RunnerDeploymentList
    Plural:     runnerdeployments
    Singular:   runnerdeployment
  Scope:        Namespaced
  Versions:
    Additional Printer Columns:
      Json Path:  .spec.replicas
      Name:       Desired
      Type:       number
      Json Path:  .status.replicas
      Name:       Current
      Type:       number
      Json Path:  .status.updatedReplicas
      Name:       Up-To-Date
      Type:       number
      Json Path:  .status.availableReplicas
      Name:       Available
      Type:       number
      Json Path:  .metadata.creationTimestamp
      Name:       Age
      Type:       date
    Name:         v1alpha1
    Schema:
      openAPIV3Schema:
        Description:  RunnerDeployment is the Schema for the runnerdeployments API
        Properties:
          API Version:
            Description:  APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            Type:         string
          Kind:
            Description:  Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            Type:         string
          Metadata:
            Type:  object
          Spec:
            Description:  RunnerDeploymentSpec defines the desired state of RunnerDeployment
            Properties:
              Replicas:
                Nullable:  true
                Type:      integer
              Selector:
                Description:  A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                Nullable:     true
                Properties:
                  Match Expressions:
                    Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    Items:
                      Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                      Properties:
                        Key:
                          Description:  key is the label key that the selector applies to.
                          Type:         string
                        Operator:
                          Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                          Type:         string
                        Values:
                          Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          Items:
                            Type:  string
                          Type:    array
                      Required:
                        key
                        operator
                      Type:  object
                    Type:    array
                  Match Labels:
                    Additional Properties:
                      Type:       string
                    Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                    Type:         object
                Type:             object
              Template:
                Properties:
                  Metadata:
                    Properties:
                      Annotations:
                        Additional Properties:
                          Type:  string
                        Type:    object
                      Finalizers:
                        Items:
                          Type:  string
                        Type:    array
                      Labels:
                        Additional Properties:
                          Type:  string
                        Type:    object
                      Name:
                        Type:  string
                      Namespace:
                        Type:  string
                    Type:      object
                  Spec:
                    Description:  RunnerSpec defines the desired state of Runner
                    Properties:
                      Affinity:
                        Description:  Affinity is a group of affinity scheduling rules.
                        Properties:
                          Node Affinity:
                            Description:  Describes node affinity scheduling rules for the pod.
                            Properties:
                              Preferred During Scheduling Ignored During Execution:
                                Description:  The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
                                Items:
                                  Description:  An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                  Properties:
                                    Preference:
                                      Description:  A node selector term, associated with the corresponding weight.
                                      Properties:
                                        Match Expressions:
                                          Description:  A list of node selector requirements by node's labels.
                                          Items:
                                            Description:  A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            Properties:
                                              Key:
                                                Description:  The label key that the selector applies to.
                                                Type:         string
                                              Operator:
                                                Description:  Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                Type:         string
                                              Values:
                                                Description:  An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                Items:
                                                  Type:  string
                                                Type:    array
                                            Required:
                                              key
                                              operator
                                            Type:  object
                                          Type:    array
                                        Match Fields:
                                          Description:  A list of node selector requirements by node's fields.
                                          Items:
                                            Description:  A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            Properties:
                                              Key:
                                                Description:  The label key that the selector applies to.
                                                Type:         string
                                              Operator:
                                                Description:  Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                Type:         string
                                              Values:
                                                Description:  An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                Items:
                                                  Type:  string
                                                Type:    array
                                            Required:
                                              key
                                              operator
                                            Type:  object
                                          Type:    array
                                      Type:        object
                                    Weight:
                                      Description:  Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                      Format:       int32
                                      Type:         integer
                                  Required:
                                    preference
                                    weight
                                  Type:  object
                                Type:    array
                              Required During Scheduling Ignored During Execution:
                                Description:  If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
                                Properties:
                                  Node Selector Terms:
                                    Description:  Required. A list of node selector terms. The terms are ORed.
                                    Items:
                                      Description:  A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                      Properties:
                                        Match Expressions:
                                          Description:  A list of node selector requirements by node's labels.
                                          Items:
                                            Description:  A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            Properties:
                                              Key:
                                                Description:  The label key that the selector applies to.
                                                Type:         string
                                              Operator:
                                                Description:  Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                Type:         string
                                              Values:
                                                Description:  An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                Items:
                                                  Type:  string
                                                Type:    array
                                            Required:
                                              key
                                              operator
                                            Type:  object
                                          Type:    array
                                        Match Fields:
                                          Description:  A list of node selector requirements by node's fields.
                                          Items:
                                            Description:  A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            Properties:
                                              Key:
                                                Description:  The label key that the selector applies to.
                                                Type:         string
                                              Operator:
                                                Description:  Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                Type:         string
                                              Values:
                                                Description:  An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                Items:
                                                  Type:  string
                                                Type:    array
                                            Required:
                                              key
                                              operator
                                            Type:  object
                                          Type:    array
                                      Type:        object
                                    Type:          array
                                Required:
                                  nodeSelectorTerms
                                Type:  object
                            Type:      object
                          Pod Affinity:
                            Description:  Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                            Properties:
                              Preferred During Scheduling Ignored During Execution:
                                Description:  The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                                Items:
                                  Description:  The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                  Properties:
                                    Pod Affinity Term:
                                      Description:  Required. A pod affinity term, associated with the corresponding weight.
                                      Properties:
                                        Label Selector:
                                          Description:  A label query over a set of resources, in this case pods.
                                          Properties:
                                            Match Expressions:
                                              Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              Items:
                                                Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                Properties:
                                                  Key:
                                                    Description:  key is the label key that the selector applies to.
                                                    Type:         string
                                                  Operator:
                                                    Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    Type:         string
                                                  Values:
                                                    Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    Items:
                                                      Type:  string
                                                    Type:    array
                                                Required:
                                                  key
                                                  operator
                                                Type:  object
                                              Type:    array
                                            Match Labels:
                                              Additional Properties:
                                                Type:       string
                                              Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              Type:         object
                                          Type:             object
                                        Namespace Selector:
                                          Description:  A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is alpha-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
                                          Properties:
                                            Match Expressions:
                                              Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              Items:
                                                Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                Properties:
                                                  Key:
                                                    Description:  key is the label key that the selector applies to.
                                                    Type:         string
                                                  Operator:
                                                    Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    Type:         string
                                                  Values:
                                                    Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    Items:
                                                      Type:  string
                                                    Type:    array
                                                Required:
                                                  key
                                                  operator
                                                Type:  object
                                              Type:    array
                                            Match Labels:
                                              Additional Properties:
                                                Type:       string
                                              Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              Type:         object
                                          Type:             object
                                        Namespaces:
                                          Description:  namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
                                          Items:
                                            Type:  string
                                          Type:    array
                                        Topology Key:
                                          Description:  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                          Type:         string
                                      Required:
                                        topologyKey
                                      Type:  object
                                    Weight:
                                      Description:  weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                      Format:       int32
                                      Type:         integer
                                  Required:
                                    podAffinityTerm
                                    weight
                                  Type:  object
                                Type:    array
                              Required During Scheduling Ignored During Execution:
                                Description:  If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                Items:
                                  Description:  Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                                  Properties:
                                    Label Selector:
                                      Description:  A label query over a set of resources, in this case pods.
                                      Properties:
                                        Match Expressions:
                                          Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          Items:
                                            Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            Properties:
                                              Key:
                                                Description:  key is the label key that the selector applies to.
                                                Type:         string
                                              Operator:
                                                Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                Type:         string
                                              Values:
                                                Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                Items:
                                                  Type:  string
                                                Type:    array
                                            Required:
                                              key
                                              operator
                                            Type:  object
                                          Type:    array
                                        Match Labels:
                                          Additional Properties:
                                            Type:       string
                                          Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          Type:         object
                                      Type:             object
                                    Namespace Selector:
                                      Description:  A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is alpha-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
                                      Properties:
                                        Match Expressions:
                                          Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          Items:
                                            Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            Properties:
                                              Key:
                                                Description:  key is the label key that the selector applies to.
                                                Type:         string
                                              Operator:
                                                Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                Type:         string
                                              Values:
                                                Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                Items:
                                                  Type:  string
                                                Type:    array
                                            Required:
                                              key
                                              operator
                                            Type:  object
                                          Type:    array
                                        Match Labels:
                                          Additional Properties:
                                            Type:       string
                                          Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          Type:         object
                                      Type:             object
                                    Namespaces:
                                      Description:  namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
                                      Items:
                                        Type:  string
                                      Type:    array
                                    Topology Key:
                                      Description:  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                      Type:         string
                                  Required:
                                    topologyKey
                                  Type:  object
                                Type:    array
                            Type:        object
                          Pod Anti Affinity:
                            Description:  Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                            Properties:
                              Preferred During Scheduling Ignored During Execution:
                                Description:  The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                                Items:
                                  Description:  The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                  Properties:
                                    Pod Affinity Term:
                                      Description:  Required. A pod affinity term, associated with the corresponding weight.
                                      Properties:
                                        Label Selector:
                                          Description:  A label query over a set of resources, in this case pods.
                                          Properties:
                                            Match Expressions:
                                              Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              Items:
                                                Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                Properties:
                                                  Key:
                                                    Description:  key is the label key that the selector applies to.
                                                    Type:         string
                                                  Operator:
                                                    Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    Type:         string
                                                  Values:
                                                    Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    Items:
                                                      Type:  string
                                                    Type:    array
                                                Required:
                                                  key
                                                  operator
                                                Type:  object
                                              Type:    array
                                            Match Labels:
                                              Additional Properties:
                                                Type:       string
                                              Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              Type:         object
                                          Type:             object
                                        Namespace Selector:
                                          Description:  A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is alpha-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
                                          Properties:
                                            Match Expressions:
                                              Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              Items:
                                                Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                Properties:
                                                  Key:
                                                    Description:  key is the label key that the selector applies to.
                                                    Type:         string
                                                  Operator:
                                                    Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    Type:         string
                                                  Values:
                                                    Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    Items:
                                                      Type:  string
                                                    Type:    array
                                                Required:
                                                  key
                                                  operator
                                                Type:  object
                                              Type:    array
                                            Match Labels:
                                              Additional Properties:
                                                Type:       string
                                              Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              Type:         object
                                          Type:             object
                                        Namespaces:
                                          Description:  namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
                                          Items:
                                            Type:  string
                                          Type:    array
                                        Topology Key:
                                          Description:  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                          Type:         string
                                      Required:
                                        topologyKey
                                      Type:  object
                                    Weight:
                                      Description:  weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                      Format:       int32
                                      Type:         integer
                                  Required:
                                    podAffinityTerm
                                    weight
                                  Type:  object
                                Type:    array
                              Required During Scheduling Ignored During Execution:
                                Description:  If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                Items:
                                  Description:  Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                                  Properties:
                                    Label Selector:
                                      Description:  A label query over a set of resources, in this case pods.
                                      Properties:
                                        Match Expressions:
                                          Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          Items:
                                            Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            Properties:
                                              Key:
                                                Description:  key is the label key that the selector applies to.
                                                Type:         string
                                              Operator:
                                                Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                Type:         string
                                              Values:
                                                Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                Items:
                                                  Type:  string
                                                Type:    array
                                            Required:
                                              key
                                              operator
                                            Type:  object
                                          Type:    array
                                        Match Labels:
                                          Additional Properties:
                                            Type:       string
                                          Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          Type:         object
                                      Type:             object
                                    Namespace Selector:
                                      Description:  A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is alpha-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
                                      Properties:
                                        Match Expressions:
                                          Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          Items:
                                            Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            Properties:
                                              Key:
                                                Description:  key is the label key that the selector applies to.
                                                Type:         string
                                              Operator:
                                                Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                Type:         string
                                              Values:
                                                Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                Items:
                                                  Type:  string
                                                Type:    array
                                            Required:
                                              key
                                              operator
                                            Type:  object
                                          Type:    array
                                        Match Labels:
                                          Additional Properties:
                                            Type:       string
                                          Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          Type:         object
                                      Type:             object
                                    Namespaces:
                                      Description:  namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
                                      Items:
                                        Type:  string
                                      Type:    array
                                    Topology Key:
                                      Description:  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                      Type:         string
                                  Required:
                                    topologyKey
                                  Type:  object
                                Type:    array
                            Type:        object
                        Type:            object
                      Automount Service Account Token:
                        Type:  boolean
                      Containers:
                        Items:
                          Description:  A single application container that you want to run within a pod.
                          Required:
                            name
                          Type:  object
                        Type:    array
                      Docker Enabled:
                        Type:  boolean
                      Docker MTU:
                        Format:  int64
                        Type:    integer
                      Docker Registry Mirror:
                        Type:  string
                      Docker Volume Mounts:
                        Items:
                          Description:  VolumeMount describes a mounting of a Volume within a container.
                          Properties:
                            Mount Path:
                              Description:  Path within the container at which the volume should be mounted.  Must not contain ':'.
                              Type:         string
                            Mount Propagation:
                              Description:  mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                              Type:         string
                            Name:
                              Description:  This must match the Name of a Volume.
                              Type:         string
                            Read Only:
                              Description:  Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                              Type:         boolean
                            Sub Path:
                              Description:  Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                              Type:         string
                            Sub Path Expr:
                              Description:  Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                              Type:         string
                          Required:
                            mountPath
                            name
                          Type:  object
                        Type:    array
                      Dockerd Container Resources:
                        Description:  ResourceRequirements describes the compute resource requirements.
                        Properties:
                          Limits:
                            Additional Properties:
                              Any Of:
                                Type:                              integer
                                Type:                              string
                              Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              X - Kubernetes - Int - Or - String:  true
                            Description:                           Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            Type:                                  object
                          Requests:
                            Additional Properties:
                              Any Of:
                                Type:                              integer
                                Type:                              string
                              Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              X - Kubernetes - Int - Or - String:  true
                            Description:                           Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            Type:                                  object
                        Type:                                      object
                      Dockerd Within Runner Container:
                        Type:  boolean
                      Enable Service Links:
                        Type:  boolean
                      Enterprise:
                        Pattern:  ^[^/]+$
                        Type:     string
                      Env:
                        Items:
                          Description:  EnvVar represents an environment variable present in a Container.
                          Properties:
                            Name:
                              Description:  Name of the environment variable. Must be a C_IDENTIFIER.
                              Type:         string
                            Value:
                              Description:  Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
                              Type:         string
                            Value From:
                              Description:  Source for the environment variable's value. Cannot be used if value is not empty.
                              Properties:
                                Config Map Key Ref:
                                  Description:  Selects a key of a ConfigMap.
                                  Properties:
                                    Key:
                                      Description:  The key to select.
                                      Type:         string
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                    Optional:
                                      Description:  Specify whether the ConfigMap or its key must be defined
                                      Type:         boolean
                                  Required:
                                    key
                                  Type:  object
                                Field Ref:
                                  Description:  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                  Properties:
                                    API Version:
                                      Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                      Type:         string
                                    Field Path:
                                      Description:  Path of the field to select in the specified API version.
                                      Type:         string
                                  Required:
                                    fieldPath
                                  Type:  object
                                Resource Field Ref:
                                  Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                  Properties:
                                    Container Name:
                                      Description:  Container name: required for volumes, optional for env vars
                                      Type:         string
                                    Divisor:
                                      Any Of:
                                        Type:                              integer
                                        Type:                              string
                                      Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                      Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      X - Kubernetes - Int - Or - String:  true
                                    Resource:
                                      Description:  Required: resource to select
                                      Type:         string
                                  Required:
                                    resource
                                  Type:  object
                                Secret Key Ref:
                                  Description:  Selects a key of a secret in the pod's namespace
                                  Properties:
                                    Key:
                                      Description:  The key of the secret to select from.  Must be a valid secret key.
                                      Type:         string
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                    Optional:
                                      Description:  Specify whether the Secret or its key must be defined
                                      Type:         boolean
                                  Required:
                                    key
                                  Type:  object
                              Type:      object
                          Required:
                            name
                          Type:  object
                        Type:    array
                      Env From:
                        Items:
                          Description:  EnvFromSource represents the source of a set of ConfigMaps
                          Properties:
                            Config Map Ref:
                              Description:  The ConfigMap to select from
                              Properties:
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the ConfigMap must be defined
                                  Type:         boolean
                              Type:             object
                            Prefix:
                              Description:  An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                              Type:         string
                            Secret Ref:
                              Description:  The Secret to select from
                              Properties:
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the Secret must be defined
                                  Type:         boolean
                              Type:             object
                          Type:                 object
                        Type:                   array
                      Ephemeral:
                        Type:  boolean
                      Ephemeral Containers:
                        Items:
                          Description:  An EphemeralContainer is a container that may be added temporarily to an existing pod for user-initiated activities such as debugging. Ephemeral containers have no resource or scheduling guarantees, and they will not be restarted when they exit or when a pod is removed or restarted. If an ephemeral container causes a pod to exceed its resource allocation, the pod may be evicted. Ephemeral containers may not be added by directly updating the pod spec. They must be added via the pod's ephemeralcontainers subresource, and they will appear in the pod spec once added. This is an alpha feature enabled by the EphemeralContainers feature flag.
                          Required:
                            name
                          Type:  object
                        Type:    array
                      Group:
                        Type:  string
                      Host Aliases:
                        Items:
                          Description:  HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
                          Properties:
                            Hostnames:
                              Description:  Hostnames for the above IP address.
                              Items:
                                Type:  string
                              Type:    array
                            Ip:
                              Description:  IP address of the host file entry.
                              Type:         string
                          Type:             object
                        Type:               array
                      Image:
                        Type:  string
                      Image Pull Policy:
                        Description:  PullPolicy describes a policy for if/when to pull a container image
                        Type:         string
                      Image Pull Secrets:
                        Items:
                          Description:  LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                          Properties:
                            Name:
                              Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                              Type:         string
                          Type:             object
                        Type:               array
                      Init Containers:
                        Items:
                          Description:  A single application container that you want to run within a pod.
                          Required:
                            name
                          Type:  object
                        Type:    array
                      Labels:
                        Items:
                          Type:  string
                        Type:    array
                      Node Selector:
                        Additional Properties:
                          Type:  string
                        Type:    object
                      Organization:
                        Pattern:  ^[^/]+$
                        Type:     string
                      Repository:
                        Pattern:  ^[^/]+/[^/]+$
                        Type:     string
                      Resources:
                        Description:  ResourceRequirements describes the compute resource requirements.
                        Properties:
                          Limits:
                            Additional Properties:
                              Any Of:
                                Type:                              integer
                                Type:                              string
                              Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              X - Kubernetes - Int - Or - String:  true
                            Description:                           Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            Type:                                  object
                          Requests:
                            Additional Properties:
                              Any Of:
                                Type:                              integer
                                Type:                              string
                              Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              X - Kubernetes - Int - Or - String:  true
                            Description:                           Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            Type:                                  object
                        Type:                                      object
                      Runtime Class Name:
                        Description:  RuntimeClassName is the container runtime configuration that containers should run under. More info: https://kubernetes.io/docs/concepts/containers/runtime-class
                        Type:         string
                      Security Context:
                        Description:  PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
                        Properties:
                          Fs Group:
                            Description:  A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 
 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- 
 If unset, the Kubelet will not modify the ownership and permissions of any volume.
                            Format:  int64
                            Type:    integer
                          Fs Group Change Policy:
                            Description:  fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                            Type:         string
                          Run As Group:
                            Description:  The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
                            Format:       int64
                            Type:         integer
                          Run As Non Root:
                            Description:  Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Type:         boolean
                          Run As User:
                            Description:  The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
                            Format:       int64
                            Type:         integer
                          Se Linux Options:
                            Description:  The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
                            Properties:
                              Level:
                                Description:  Level is SELinux level label that applies to the container.
                                Type:         string
                              Role:
                                Description:  Role is a SELinux role label that applies to the container.
                                Type:         string
                              Type:
                                Description:  Type is a SELinux type label that applies to the container.
                                Type:         string
                              User:
                                Description:  User is a SELinux user label that applies to the container.
                                Type:         string
                            Type:             object
                          Seccomp Profile:
                            Description:  The seccomp options to use by the containers in this pod.
                            Properties:
                              Localhost Profile:
                                Description:  localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
                                Type:         string
                              Type:
                                Description:  type indicates which kind of seccomp profile will be applied. Valid options are: 
 Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                                Type:  string
                            Required:
                              type
                            Type:  object
                          Supplemental Groups:
                            Description:  A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
                            Items:
                              Format:  int64
                              Type:    integer
                            Type:      array
                          Sysctls:
                            Description:  Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
                            Items:
                              Description:  Sysctl defines a kernel parameter to be set
                              Properties:
                                Name:
                                  Description:  Name of a property to set
                                  Type:         string
                                Value:
                                  Description:  Value of a property to set
                                  Type:         string
                              Required:
                                name
                                value
                              Type:  object
                            Type:    array
                          Windows Options:
                            Description:  The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Properties:
                              Gmsa Credential Spec:
                                Description:  GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                                Type:         string
                              Gmsa Credential Spec Name:
                                Description:  GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                Type:         string
                              Run As User Name:
                                Description:  The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Type:         string
                            Type:             object
                        Type:                 object
                      Service Account Name:
                        Type:  string
                      Sidecar Containers:
                        Items:
                          Description:  A single application container that you want to run within a pod.
                          Required:
                            name
                          Type:  object
                        Type:    array
                      Termination Grace Period Seconds:
                        Format:  int64
                        Type:    integer
                      Tolerations:
                        Items:
                          Description:  The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                          Properties:
                            Effect:
                              Description:  Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                              Type:         string
                            Key:
                              Description:  Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                              Type:         string
                            Operator:
                              Description:  Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                              Type:         string
                            Toleration Seconds:
                              Description:  TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                              Format:       int64
                              Type:         integer
                            Value:
                              Description:  Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                              Type:         string
                          Type:             object
                        Type:               array
                      Volume Mounts:
                        Items:
                          Description:  VolumeMount describes a mounting of a Volume within a container.
                          Properties:
                            Mount Path:
                              Description:  Path within the container at which the volume should be mounted.  Must not contain ':'.
                              Type:         string
                            Mount Propagation:
                              Description:  mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                              Type:         string
                            Name:
                              Description:  This must match the Name of a Volume.
                              Type:         string
                            Read Only:
                              Description:  Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                              Type:         boolean
                            Sub Path:
                              Description:  Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                              Type:         string
                            Sub Path Expr:
                              Description:  Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                              Type:         string
                          Required:
                            mountPath
                            name
                          Type:  object
                        Type:    array
                      Volume Size Limit:
                        Any Of:
                          Type:                              integer
                          Type:                              string
                        Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        X - Kubernetes - Int - Or - String:  true
                      Volumes:
                        Items:
                          Description:  Volume represents a named volume in a pod that may be accessed by any container in the pod.
                          Properties:
                            Aws Elastic Block Store:
                              Description:  AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              Properties:
                                Fs Type:
                                  Description:  Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine
                                  Type:         string
                                Partition:
                                  Description:  The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                  Format:       int32
                                  Type:         integer
                                Read Only:
                                  Description:  Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                  Type:         boolean
                                Volume ID:
                                  Description:  Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                  Type:         string
                              Required:
                                volumeID
                              Type:  object
                            Azure Disk:
                              Description:  AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                              Properties:
                                Caching Mode:
                                  Description:  Host Caching mode: None, Read Only, Read Write.
                                  Type:         string
                                Disk Name:
                                  Description:  The Name of the data disk in the blob storage
                                  Type:         string
                                Disk URI:
                                  Description:  The URI the data disk in the blob storage
                                  Type:         string
                                Fs Type:
                                  Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                  Type:         string
                                Kind:
                                  Description:  Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
                                  Type:         string
                                Read Only:
                                  Description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                  Type:         boolean
                              Required:
                                diskName
                                diskURI
                              Type:  object
                            Azure File:
                              Description:  AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
                              Properties:
                                Read Only:
                                  Description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                  Type:         boolean
                                Secret Name:
                                  Description:  the name of secret that contains Azure Storage Account Name and Key
                                  Type:         string
                                Share Name:
                                  Description:  Share Name
                                  Type:         string
                              Required:
                                secretName
                                shareName
                              Type:  object
                            Cephfs:
                              Description:  CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
                              Properties:
                                Monitors:
                                  Description:  Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  Items:
                                    Type:  string
                                  Type:    array
                                Path:
                                  Description:  Optional: Used as the mounted root, rather than the full Ceph tree, default is /
                                  Type:         string
                                Read Only:
                                  Description:  Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  Type:         boolean
                                Secret File:
                                  Description:  Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  Type:         string
                                Secret Ref:
                                  Description:  Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  Properties:
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                  Type:             object
                                User:
                                  Description:  Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  Type:         string
                              Required:
                                monitors
                              Type:  object
                            Cinder:
                              Description:  Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                              Properties:
                                Fs Type:
                                  Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                  Type:         string
                                Read Only:
                                  Description:  Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                  Type:         boolean
                                Secret Ref:
                                  Description:  Optional: points to a secret object containing parameters used to connect to OpenStack.
                                  Properties:
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                  Type:             object
                                Volume ID:
                                  Description:  volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                  Type:         string
                              Required:
                                volumeID
                              Type:  object
                            Config Map:
                              Description:  ConfigMap represents a configMap that should populate this volume
                              Properties:
                                Default Mode:
                                  Description:  Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                  Format:       int32
                                  Type:         integer
                                Items:
                                  Description:  If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                  Items:
                                    Description:  Maps a string key to a path within a volume.
                                    Properties:
                                      Key:
                                        Description:  The key to project.
                                        Type:         string
                                      Mode:
                                        Description:  Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                        Format:       int32
                                        Type:         integer
                                      Path:
                                        Description:  The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                        Type:         string
                                    Required:
                                      key
                                      path
                                    Type:  object
                                  Type:    array
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the ConfigMap or its keys must be defined
                                  Type:         boolean
                              Type:             object
                            Csi:
                              Description:  CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
                              Properties:
                                Driver:
                                  Description:  Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
                                  Type:         string
                                Fs Type:
                                  Description:  Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
                                  Type:         string
                                Node Publish Secret Ref:
                                  Description:  NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
                                  Properties:
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                  Type:             object
                                Read Only:
                                  Description:  Specifies a read-only configuration for the volume. Defaults to false (read/write).
                                  Type:         boolean
                                Volume Attributes:
                                  Additional Properties:
                                    Type:       string
                                  Description:  VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
                                  Type:         object
                              Required:
                                driver
                              Type:  object
                            Downward API:
                              Description:  DownwardAPI represents downward API about the pod that should populate this volume
                              Properties:
                                Default Mode:
                                  Description:  Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                  Format:       int32
                                  Type:         integer
                                Items:
                                  Description:  Items is a list of downward API volume file
                                  Items:
                                    Description:  DownwardAPIVolumeFile represents information to create the file containing the pod field
                                    Properties:
                                      Field Ref:
                                        Description:  Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
                                        Properties:
                                          API Version:
                                            Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                            Type:         string
                                          Field Path:
                                            Description:  Path of the field to select in the specified API version.
                                            Type:         string
                                        Required:
                                          fieldPath
                                        Type:  object
                                      Mode:
                                        Description:  Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                        Format:       int32
                                        Type:         integer
                                      Path:
                                        Description:  Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
                                        Type:         string
                                      Resource Field Ref:
                                        Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                        Properties:
                                          Container Name:
                                            Description:  Container name: required for volumes, optional for env vars
                                            Type:         string
                                          Divisor:
                                            Any Of:
                                              Type:                              integer
                                              Type:                              string
                                            Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                            Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            X - Kubernetes - Int - Or - String:  true
                                          Resource:
                                            Description:  Required: resource to select
                                            Type:         string
                                        Required:
                                          resource
                                        Type:  object
                                    Required:
                                      path
                                    Type:  object
                                  Type:    array
                              Type:        object
                            Empty Dir:
                              Description:  EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                              Properties:
                                Medium:
                                  Description:  What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                  Type:         string
                                Size Limit:
                                  Any Of:
                                    Type:                              integer
                                    Type:                              string
                                  Description:                         Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
                                  Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  X - Kubernetes - Int - Or - String:  true
                              Type:                                    object
                            Ephemeral:
                              Description:  Ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed. 
 Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim). 
 Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod. 
 Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information. 
 A pod can use both types of ephemeral volumes and persistent volumes at the same time. 
 This is a beta feature and only available when the GenericEphemeralVolume feature gate is enabled.
                              Properties:
                                Volume Claim Template:
                                  Description:  Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long). 
 An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster. 
 This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created. 
 Required, must not be nil.
                                  Properties:
                                    Metadata:
                                      Description:  May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
                                      Properties:
                                        Annotations:
                                          Additional Properties:
                                            Type:  string
                                          Type:    object
                                        Finalizers:
                                          Items:
                                            Type:  string
                                          Type:    array
                                        Labels:
                                          Additional Properties:
                                            Type:  string
                                          Type:    object
                                        Name:
                                          Type:  string
                                        Namespace:
                                          Type:  string
                                      Type:      object
                                    Spec:
                                      Description:  The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.
                                      Properties:
                                        Access Modes:
                                          Description:  AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                          Items:
                                            Type:  string
                                          Type:    array
                                        Data Source:
                                          Description:  This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.
                                          Properties:
                                            API Group:
                                              Description:  APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                              Type:         string
                                            Kind:
                                              Description:  Kind is the type of resource being referenced
                                              Type:         string
                                            Name:
                                              Description:  Name is the name of resource being referenced
                                              Type:         string
                                          Required:
                                            kind
                                            name
                                          Type:  object
                                        Resources:
                                          Description:  Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                          Properties:
                                            Limits:
                                              Additional Properties:
                                                Any Of:
                                                  Type:                              integer
                                                  Type:                              string
                                                Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                X - Kubernetes - Int - Or - String:  true
                                              Description:                           Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                              Type:                                  object
                                            Requests:
                                              Additional Properties:
                                                Any Of:
                                                  Type:                              integer
                                                  Type:                              string
                                                Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                X - Kubernetes - Int - Or - String:  true
                                              Description:                           Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                              Type:                                  object
                                          Type:                                      object
                                        Selector:
                                          Description:  A label query over volumes to consider for binding.
                                          Properties:
                                            Match Expressions:
                                              Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              Items:
                                                Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                Properties:
                                                  Key:
                                                    Description:  key is the label key that the selector applies to.
                                                    Type:         string
                                                  Operator:
                                                    Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    Type:         string
                                                  Values:
                                                    Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    Items:
                                                      Type:  string
                                                    Type:    array
                                                Required:
                                                  key
                                                  operator
                                                Type:  object
                                              Type:    array
                                            Match Labels:
                                              Additional Properties:
                                                Type:       string
                                              Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              Type:         object
                                          Type:             object
                                        Storage Class Name:
                                          Description:  Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                          Type:         string
                                        Volume Mode:
                                          Description:  volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                                          Type:         string
                                        Volume Name:
                                          Description:  VolumeName is the binding reference to the PersistentVolume backing this claim.
                                          Type:         string
                                      Type:             object
                                  Required:
                                    spec
                                  Type:  object
                              Type:      object
                            Fc:
                              Description:  FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
                              Properties:
                                Fs Type:
                                  Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine
                                  Type:         string
                                Lun:
                                  Description:  Optional: FC target lun number
                                  Format:       int32
                                  Type:         integer
                                Read Only:
                                  Description:  Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                  Type:         boolean
                                Target WW Ns:
                                  Description:  Optional: FC target worldwide names (WWNs)
                                  Items:
                                    Type:  string
                                  Type:    array
                                Wwids:
                                  Description:  Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                                  Items:
                                    Type:  string
                                  Type:    array
                              Type:        object
                            Flex Volume:
                              Description:  FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
                              Properties:
                                Driver:
                                  Description:  Driver is the name of the driver to use for this volume.
                                  Type:         string
                                Fs Type:
                                  Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                                  Type:         string
                                Options:
                                  Additional Properties:
                                    Type:       string
                                  Description:  Optional: Extra command options if any.
                                  Type:         object
                                Read Only:
                                  Description:  Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                  Type:         boolean
                                Secret Ref:
                                  Description:  Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
                                  Properties:
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                  Type:             object
                              Required:
                                driver
                              Type:  object
                            Flocker:
                              Description:  Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
                              Properties:
                                Dataset Name:
                                  Description:  Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
                                  Type:         string
                                Dataset UUID:
                                  Description:  UUID of the dataset. This is unique identifier of a Flocker dataset
                                  Type:         string
                              Type:             object
                            Gce Persistent Disk:
                              Description:  GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              Properties:
                                Fs Type:
                                  Description:  Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine
                                  Type:         string
                                Partition:
                                  Description:  The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  Format:       int32
                                  Type:         integer
                                Pd Name:
                                  Description:  Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  Type:         string
                                Read Only:
                                  Description:  ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  Type:         boolean
                              Required:
                                pdName
                              Type:  object
                            Git Repo:
                              Description:  GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
                              Properties:
                                Directory:
                                  Description:  Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
                                  Type:         string
                                Repository:
                                  Description:  Repository URL
                                  Type:         string
                                Revision:
                                  Description:  Commit hash for the specified revision.
                                  Type:         string
                              Required:
                                repository
                              Type:  object
                            Glusterfs:
                              Description:  Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md
                              Properties:
                                Endpoints:
                                  Description:  EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                  Type:         string
                                Path:
                                  Description:  Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                  Type:         string
                                Read Only:
                                  Description:  ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                  Type:         boolean
                              Required:
                                endpoints
                                path
                              Type:  object
                            Host Path:
                              Description:  HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.
                              Properties:
                                Path:
                                  Description:  Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                  Type:         string
                                Type:
                                  Description:  Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                  Type:         string
                              Required:
                                path
                              Type:  object
                            Iscsi:
                              Description:  ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md
                              Properties:
                                Chap Auth Discovery:
                                  Description:  whether support iSCSI Discovery CHAP authentication
                                  Type:         boolean
                                Chap Auth Session:
                                  Description:  whether support iSCSI Session CHAP authentication
                                  Type:         boolean
                                Fs Type:
                                  Description:  Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine
                                  Type:         string
                                Initiator Name:
                                  Description:  Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
                                  Type:         string
                                Iqn:
                                  Description:  Target iSCSI Qualified Name.
                                  Type:         string
                                Iscsi Interface:
                                  Description:  iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
                                  Type:         string
                                Lun:
                                  Description:  iSCSI Target Lun number.
                                  Format:       int32
                                  Type:         integer
                                Portals:
                                  Description:  iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                                  Items:
                                    Type:  string
                                  Type:    array
                                Read Only:
                                  Description:  ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
                                  Type:         boolean
                                Secret Ref:
                                  Description:  CHAP Secret for iSCSI target and initiator authentication
                                  Properties:
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                  Type:             object
                                Target Portal:
                                  Description:  iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                                  Type:         string
                              Required:
                                iqn
                                lun
                                targetPortal
                              Type:  object
                            Name:
                              Description:  Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              Type:         string
                            Nfs:
                              Description:  NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                              Properties:
                                Path:
                                  Description:  Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                  Type:         string
                                Read Only:
                                  Description:  ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                  Type:         boolean
                                Server:
                                  Description:  Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                  Type:         string
                              Required:
                                path
                                server
                              Type:  object
                            Persistent Volume Claim:
                              Description:  PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                              Properties:
                                Claim Name:
                                  Description:  ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                  Type:         string
                                Read Only:
                                  Description:  Will force the ReadOnly setting in VolumeMounts. Default false.
                                  Type:         boolean
                              Required:
                                claimName
                              Type:  object
                            Photon Persistent Disk:
                              Description:  PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
                              Properties:
                                Fs Type:
                                  Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                  Type:         string
                                Pd ID:
                                  Description:  ID that identifies Photon Controller persistent disk
                                  Type:         string
                              Required:
                                pdID
                              Type:  object
                            Portworx Volume:
                              Description:  PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
                              Properties:
                                Fs Type:
                                  Description:  FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                                  Type:         string
                                Read Only:
                                  Description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                  Type:         boolean
                                Volume ID:
                                  Description:  VolumeID uniquely identifies a Portworx volume
                                  Type:         string
                              Required:
                                volumeID
                              Type:  object
                            Projected:
                              Description:  Items for all in one resources secrets, configmaps, and downward API
                              Properties:
                                Default Mode:
                                  Description:  Mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                  Format:       int32
                                  Type:         integer
                                Sources:
                                  Description:  list of volume projections
                                  Items:
                                    Description:  Projection that may be projected along with other supported volume types
                                    Properties:
                                      Config Map:
                                        Description:  information about the configMap data to project
                                        Properties:
                                          Items:
                                            Description:  If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                            Items:
                                              Description:  Maps a string key to a path within a volume.
                                              Properties:
                                                Key:
                                                  Description:  The key to project.
                                                  Type:         string
                                                Mode:
                                                  Description:  Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                                  Format:       int32
                                                  Type:         integer
                                                Path:
                                                  Description:  The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                                  Type:         string
                                              Required:
                                                key
                                                path
                                              Type:  object
                                            Type:    array
                                          Name:
                                            Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                            Type:         string
                                          Optional:
                                            Description:  Specify whether the ConfigMap or its keys must be defined
                                            Type:         boolean
                                        Type:             object
                                      Downward API:
                                        Description:  information about the downwardAPI data to project
                                        Properties:
                                          Items:
                                            Description:  Items is a list of DownwardAPIVolume file
                                            Items:
                                              Description:  DownwardAPIVolumeFile represents information to create the file containing the pod field
                                              Properties:
                                                Field Ref:
                                                  Description:  Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
                                                  Properties:
                                                    API Version:
                                                      Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                      Type:         string
                                                    Field Path:
                                                      Description:  Path of the field to select in the specified API version.
                                                      Type:         string
                                                  Required:
                                                    fieldPath
                                                  Type:  object
                                                Mode:
                                                  Description:  Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                                  Format:       int32
                                                  Type:         integer
                                                Path:
                                                  Description:  Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
                                                  Type:         string
                                                Resource Field Ref:
                                                  Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                                  Properties:
                                                    Container Name:
                                                      Description:  Container name: required for volumes, optional for env vars
                                                      Type:         string
                                                    Divisor:
                                                      Any Of:
                                                        Type:                              integer
                                                        Type:                              string
                                                      Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                                      Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      X - Kubernetes - Int - Or - String:  true
                                                    Resource:
                                                      Description:  Required: resource to select
                                                      Type:         string
                                                  Required:
                                                    resource
                                                  Type:  object
                                              Required:
                                                path
                                              Type:  object
                                            Type:    array
                                        Type:        object
                                      Secret:
                                        Description:  information about the secret data to project
                                        Properties:
                                          Items:
                                            Description:  If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                            Items:
                                              Description:  Maps a string key to a path within a volume.
                                              Properties:
                                                Key:
                                                  Description:  The key to project.
                                                  Type:         string
                                                Mode:
                                                  Description:  Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                                  Format:       int32
                                                  Type:         integer
                                                Path:
                                                  Description:  The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                                  Type:         string
                                              Required:
                                                key
                                                path
                                              Type:  object
                                            Type:    array
                                          Name:
                                            Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                            Type:         string
                                          Optional:
                                            Description:  Specify whether the Secret or its key must be defined
                                            Type:         boolean
                                        Type:             object
                                      Service Account Token:
                                        Description:  information about the serviceAccountToken data to project
                                        Properties:
                                          Audience:
                                            Description:  Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
                                            Type:         string
                                          Expiration Seconds:
                                            Description:  ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
                                            Format:       int64
                                            Type:         integer
                                          Path:
                                            Description:  Path is the path relative to the mount point of the file to project the token into.
                                            Type:         string
                                        Required:
                                          path
                                        Type:  object
                                    Type:      object
                                  Type:        array
                              Type:            object
                            Quobyte:
                              Description:  Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
                              Properties:
                                Group:
                                  Description:  Group to map volume access to Default is no group
                                  Type:         string
                                Read Only:
                                  Description:  ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
                                  Type:         boolean
                                Registry:
                                  Description:  Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
                                  Type:         string
                                Tenant:
                                  Description:  Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                                  Type:         string
                                User:
                                  Description:  User to map volume access to Defaults to serivceaccount user
                                  Type:         string
                                Volume:
                                  Description:  Volume is a string that references an already created Quobyte volume by name.
                                  Type:         string
                              Required:
                                registry
                                volume
                              Type:  object
                            Rbd:
                              Description:  RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
                              Properties:
                                Fs Type:
                                  Description:  Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine
                                  Type:         string
                                Image:
                                  Description:  The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  Type:         string
                                Keyring:
                                  Description:  Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  Type:         string
                                Monitors:
                                  Description:  A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  Items:
                                    Type:  string
                                  Type:    array
                                Pool:
                                  Description:  The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  Type:         string
                                Read Only:
                                  Description:  ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  Type:         boolean
                                Secret Ref:
                                  Description:  SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  Properties:
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                  Type:             object
                                User:
                                  Description:  The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  Type:         string
                              Required:
                                image
                                monitors
                              Type:  object
                            Scale IO:
                              Description:  ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                              Properties:
                                Fs Type:
                                  Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                                  Type:         string
                                Gateway:
                                  Description:  The host address of the ScaleIO API Gateway.
                                  Type:         string
                                Protection Domain:
                                  Description:  The name of the ScaleIO Protection Domain for the configured storage.
                                  Type:         string
                                Read Only:
                                  Description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                  Type:         boolean
                                Secret Ref:
                                  Description:  SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
                                  Properties:
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                  Type:             object
                                Ssl Enabled:
                                  Description:  Flag to enable/disable SSL communication with Gateway, default false
                                  Type:         boolean
                                Storage Mode:
                                  Description:  Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
                                  Type:         string
                                Storage Pool:
                                  Description:  The ScaleIO Storage Pool associated with the protection domain.
                                  Type:         string
                                System:
                                  Description:  The name of the storage system as configured in ScaleIO.
                                  Type:         string
                                Volume Name:
                                  Description:  The name of a volume already created in the ScaleIO system that is associated with this volume source.
                                  Type:         string
                              Required:
                                gateway
                                secretRef
                                system
                              Type:  object
                            Secret:
                              Description:  Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                              Properties:
                                Default Mode:
                                  Description:  Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                  Format:       int32
                                  Type:         integer
                                Items:
                                  Description:  If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                  Items:
                                    Description:  Maps a string key to a path within a volume.
                                    Properties:
                                      Key:
                                        Description:  The key to project.
                                        Type:         string
                                      Mode:
                                        Description:  Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                        Format:       int32
                                        Type:         integer
                                      Path:
                                        Description:  The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                        Type:         string
                                    Required:
                                      key
                                      path
                                    Type:  object
                                  Type:    array
                                Optional:
                                  Description:  Specify whether the Secret or its keys must be defined
                                  Type:         boolean
                                Secret Name:
                                  Description:  Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                  Type:         string
                              Type:             object
                            Storageos:
                              Description:  StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                              Properties:
                                Fs Type:
                                  Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                  Type:         string
                                Read Only:
                                  Description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                  Type:         boolean
                                Secret Ref:
                                  Description:  SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
                                  Properties:
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                  Type:             object
                                Volume Name:
                                  Description:  VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
                                  Type:         string
                                Volume Namespace:
                                  Description:  VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
                                  Type:         string
                              Type:             object
                            Vsphere Volume:
                              Description:  VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
                              Properties:
                                Fs Type:
                                  Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                  Type:         string
                                Storage Policy ID:
                                  Description:  Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
                                  Type:         string
                                Storage Policy Name:
                                  Description:  Storage Policy Based Management (SPBM) profile name.
                                  Type:         string
                                Volume Path:
                                  Description:  Path that identifies vSphere volume vmdk
                                  Type:         string
                              Required:
                                volumePath
                              Type:  object
                          Required:
                            name
                          Type:  object
                        Type:    array
                      Work Dir:
                        Type:  string
                    Type:      object
                Type:          object
            Required:
              template
            Type:  object
          Status:
            Properties:
              Available Replicas:
                Description:  AvailableReplicas is the total number of available runners which have been successfully registered to GitHub and still running. This corresponds to the sum of status.availableReplicas of all the runner replica sets.
                Type:         integer
              Desired Replicas:
                Description:  DesiredReplicas is the total number of desired, non-terminated and latest pods to be set for the primary RunnerSet This doesn't include outdated pods while upgrading the deployment and replacing the runnerset.
                Type:         integer
              Ready Replicas:
                Description:  ReadyReplicas is the total number of available runners which have been successfully registered to GitHub and still running. This corresponds to the sum of status.readyReplicas of all the runner replica sets.
                Type:         integer
              Replicas:
                Description:  Replicas is the total number of replicas
                Type:         integer
              Updated Replicas:
                Description:  ReadyReplicas is the total number of available runners which have been successfully registered to GitHub and still running. This corresponds to status.replicas of the runner replica set that has the desired template hash.
                Type:         integer
            Type:             object
        Type:                 object
    Served:                   true
    Storage:                  true
    Subresources:
      Status:
Status:
  Accepted Names:
    Kind:       RunnerDeployment
    List Kind:  RunnerDeploymentList
    Plural:     runnerdeployments
    Singular:   runnerdeployment
  Conditions:
    Last Transition Time:  2021-08-14T18:27:59Z
    Message:               no conflicts found
    Reason:                NoConflicts
    Status:                True
    Type:                  NamesAccepted
    Last Transition Time:  2021-08-14T18:27:59Z
    Message:               the initial names have been accepted
    Reason:                InitialNamesAccepted
    Status:                True
    Type:                  Established
  Stored Versions:
    v1alpha1
Events:  <none>
